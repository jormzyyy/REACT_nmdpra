"""Initial database schema

Revision ID: 722ad6550f37
Revises: 
Create Date: 2025-06-23 10:01:34.576651

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '722ad6550f37'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categories')),
    sa.UniqueConstraint('name', name=op.f('uq_categories_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('azure_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('job_title', sa.String(length=100), nullable=True),
    sa.Column('company_name', sa.String(length=100), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('office_location', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('azure_id', name=op.f('uq_users_azure_id')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('inventories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('item_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=True),
    sa.Column('supplier', sa.String(length=255), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_inventories_category_id_categories')),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_inventories_created_by_users')),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name=op.f('fk_inventories_updated_by_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_inventories')),
    sa.UniqueConstraint('item_name', name=op.f('uq_inventories_item_name'))
    )
    op.create_table('requests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reference_number', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'PARTIALLY_APPROVED', 'REJECTED', 'COLLECTED', name='requeststatus'), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=False),
    sa.Column('admin_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.Column('deletion_reason', sa.Text(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('directorate', sa.Enum('ACE', 'Audit', 'DSSRI', 'HPPITI', 'CSA', 'MDGIF', 'FA', 'Procurement', 'HSEC', 'ERSP', 'ICT', name='directorate_enum'), nullable=False),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('unit', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], name=op.f('fk_requests_approved_by_users')),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], name=op.f('fk_requests_deleted_by_users')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_requests_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_requests')),
    sa.UniqueConstraint('reference_number', name=op.f('uq_requests_reference_number'))
    )
    op.create_table('inventory_suppliers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('supplier_name', sa.String(length=255), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=True),
    sa.Column('last_purchase_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventories.id'], name=op.f('fk_inventory_suppliers_inventory_id_inventories'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_inventory_suppliers'))
    )
    op.create_table('request_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('quantity_approved', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'COLLECTED', name='itemrequeststatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventories.id'], name=op.f('fk_request_items_inventory_id_inventories')),
    sa.ForeignKeyConstraint(['request_id'], ['requests.id'], name=op.f('fk_request_items_request_id_requests'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_request_items'))
    )
    op.create_table('inventory_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sa.String(length=50), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('related_request_id', sa.Integer(), nullable=True),
    sa.Column('performed_by', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('unit_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventories.id'], name=op.f('fk_inventory_transactions_inventory_id_inventories')),
    sa.ForeignKeyConstraint(['performed_by'], ['users.id'], name=op.f('fk_inventory_transactions_performed_by_users')),
    sa.ForeignKeyConstraint(['related_request_id'], ['requests.id'], name=op.f('fk_inventory_transactions_related_request_id_requests')),
    sa.ForeignKeyConstraint(['supplier_id'], ['inventory_suppliers.id'], name=op.f('fk_inventory_transactions_supplier_id_inventory_suppliers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_inventory_transactions'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('inventory_transactions')
    op.drop_table('request_items')
    op.drop_table('inventory_suppliers')
    op.drop_table('requests')
    op.drop_table('inventories')
    op.drop_table('users')
    op.drop_table('categories')
    # ### end Alembic commands ###
